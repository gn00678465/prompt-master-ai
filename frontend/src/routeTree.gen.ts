/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from "./routes/__root";
import { Route as IndexRouteImport } from "./routes/index";
import { Route as TemplatesIndexRouteImport } from "./routes/templates/index";
import { Route as HistoryIndexRouteImport } from "./routes/history/index";
import { Route as AuthIndexRouteImport } from "./routes/auth/index";

const IndexRoute = IndexRouteImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRouteImport,
} as any);
const TemplatesIndexRoute = TemplatesIndexRouteImport.update({
  id: "/templates/",
  path: "/templates/",
  getParentRoute: () => rootRouteImport,
} as any);
const HistoryIndexRoute = HistoryIndexRouteImport.update({
  id: "/history/",
  path: "/history/",
  getParentRoute: () => rootRouteImport,
} as any);
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: "/auth/",
  path: "/auth/",
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/auth": typeof AuthIndexRoute;
  "/history": typeof HistoryIndexRoute;
  "/templates": typeof TemplatesIndexRoute;
}
export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/auth": typeof AuthIndexRoute;
  "/history": typeof HistoryIndexRoute;
  "/templates": typeof TemplatesIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  "/": typeof IndexRoute;
  "/auth/": typeof AuthIndexRoute;
  "/history/": typeof HistoryIndexRoute;
  "/templates/": typeof TemplatesIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/auth" | "/history" | "/templates";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/auth" | "/history" | "/templates";
  id: "__root__" | "/" | "/auth/" | "/history/" | "/templates/";
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  AuthIndexRoute: typeof AuthIndexRoute;
  HistoryIndexRoute: typeof HistoryIndexRoute;
  TemplatesIndexRoute: typeof TemplatesIndexRoute;
}

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/templates/": {
      id: "/templates/";
      path: "/templates";
      fullPath: "/templates";
      preLoaderRoute: typeof TemplatesIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/history/": {
      id: "/history/";
      path: "/history";
      fullPath: "/history";
      preLoaderRoute: typeof HistoryIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    "/auth/": {
      id: "/auth/";
      path: "/auth";
      fullPath: "/auth";
      preLoaderRoute: typeof AuthIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthIndexRoute: AuthIndexRoute,
  HistoryIndexRoute: HistoryIndexRoute,
  TemplatesIndexRoute: TemplatesIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
